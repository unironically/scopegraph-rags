
aspect DFA {
  
  public static DFA DFA.modRefDFA = null;
  public static DFA DFA.varRefDFA = null;

  public static DFA DFA.modRefDFA() {

    if (DFA.modRefDFA != null) return DFA.modRefDFA;

    // LEX* IMP? MOD

    State state0 = new State();
    State state1 = new State();
    FinalState state2 = new FinalState();
    SinkState sink = new SinkState();

    state0.setId(0);
    state0.setLexTrans(state0);
    state0.setImpTrans(state1);
    state0.setModTrans(state2);
    state0.setVarTrans(sink);

    state1.setId(1);
    state1.setLexTrans(sink);
    state1.setImpTrans(sink);
    state1.setModTrans(state2);
    state1.setVarTrans(sink);

    state2.setId(2);
    state2.setLexTrans(sink);
    state2.setImpTrans(sink);
    state2.setModTrans(sink);
    state2.setVarTrans(sink);

    sink.setId(-1);
    sink.setLexTrans(sink);
    sink.setImpTrans(sink);
    sink.setModTrans(sink);
    sink.setVarTrans(sink);

    DFA.modRefDFA = new DFA(state0);

    return DFA.modRefDFA;
    
  }

  public static DFA DFA.varRefDFA() {

    if (DFA.varRefDFA != null) return DFA.varRefDFA;

    // LEX* IMP? VAR

    State state0 = new State();
    State state1 = new State();
    FinalState state2 = new FinalState();
    SinkState sink = new SinkState();

    state0.setId(0);
    state0.setLexTrans(state0);
    state0.setImpTrans(state1);
    state0.setModTrans(sink);
    state0.setVarTrans(state2);

    state1.setId(1);
    state1.setLexTrans(sink);
    state1.setImpTrans(sink);
    state1.setModTrans(sink);
    state1.setVarTrans(state2);

    state2.setId(2);
    state2.setLexTrans(sink);
    state2.setImpTrans(sink);
    state2.setModTrans(sink);
    state2.setVarTrans(sink);

    sink.setId(-1);
    sink.setLexTrans(sink);
    sink.setImpTrans(sink);
    sink.setModTrans(sink);
    sink.setVarTrans(sink);

    DFA.varRefDFA = new DFA(state0);

    return DFA.varRefDFA;

  }

}